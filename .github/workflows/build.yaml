on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  linux:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v4
      - name: rustups
        run: rustup update && rustup target add x86_64-unknown-linux-gnu && rustup target add wasm32-unknown-unknown && rustup toolchain install nightly-x86_64-unknown-linux-gnu && rustup component add rust-src --toolchain nightly-x86_64-unknown-linux-gnu
      - name: cargo
        run: cargo install --force cargo-make && cargo install wasm-pack #&& cargo install --locked trunk
      - name: main
        run: cargo make
      - name: ts
        run: cd source/shtml/viewer && cargo make wasm-pack-ts
      - name: doc
        run: cargo make doc
      - name: Remove lock file
        run: rm target/doc/.lock
      - name: Upload Docs
        uses: actions/upload-pages-artifact@v3
        with:
          path: target/doc
      - name: Upload Binaries
        uses: actions/upload-artifact@v4
        with:
          name: linux
          path: bin
      - name: Upload Typescript
        uses: actions/upload-artifact@v4
        with:
          name: ts
          path: source/shtml/viewer/ts
  windows:
    runs-on: windows-latest
    environment: production
    steps:
      - uses: actions/checkout@v4
      - name: rustups
        run: rustup update && rustup target add x86_64-pc-windows-msvc && rustup target add wasm32-unknown-unknown && rustup toolchain install nightly-x86_64-pc-windows-msvc && rustup component add rust-src --toolchain nightly-x86_64-pc-windows-msvc && rustup default nightly-x86_64-pc-windows-msvc
      - name: cargo
        run: cargo install --force cargo-make && cargo install wasm-pack
      - name: main
        run: cargo make
      - name: Upload Binaries
        uses: actions/upload-artifact@v4
        with:
          name: windows
          path: bin
#  mac_x86:
#    runs-on: macos-14-large
#    environment: production
#    steps:
#      - uses: actions/checkout@v4
#      - name: rustups
#        run: rustup target add x86_64-apple-darwin && rustup target add wasm32-unknown-unknown && rustup toolchain install nightly-x86_64-apple-darwin && rustup component add rust-src --toolchain nightly-x86_64-apple-darwin && rustup default nightly-x86_64-apple-darwin #&& rustup component add rust-src --toolchain nightly-aarch64-apple-darwin
#      - name: cargo
#        run: cargo install cargo-leptos && cargo install --locked trunk
#      - name: graphs
#        run: cd web/graphs && CARGO_TARGET_DIR=../../target RUSTFLAGS="--cfg=web_sys_unstable_apis" trunk build --features=client --release
#      - name: main
#        run: IMMT_BUILD_GRAPHS=true cargo leptos build --release
#      - name: bundle
#        run: mkdir out && cp target/release/immt out/immt && cp -r target/web out/web && cp main/resources/settings.toml out/settings.toml
#      - uses: actions/upload-artifact@v4
#        with:
#          name: mac_x86
#          path: out
  mac_aarch64:
    runs-on: macos-latest
    environment: production
    steps:
      - uses: actions/checkout@v4
      - name: rustups
        run: rustup update && rustup target add aarch64-apple-darwin && rustup target add wasm32-unknown-unknown && rustup toolchain install nightly-aarch64-apple-darwin && rustup component add rust-src --toolchain nightly-aarch64-apple-darwin && rustup default nightly-aarch64-apple-darwin
      - name: cargo
        run: cargo install --force cargo-make && cargo install wasm-pack
      - name: main
        run: cargo make
      - name: Upload Binaries
        uses: actions/upload-artifact@v4
        with:
          name: mac_aarch64
          path: out
