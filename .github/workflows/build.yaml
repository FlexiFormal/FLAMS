on:
  push:
    branches: [release]

jobs:
  linux:
    runs-on: ubuntu-22.04
    environment: production
    steps:
      - uses: actions/checkout@v4
      - name: rustups
        run: rustup update && rustup target add x86_64-unknown-linux-gnu && rustup target add wasm32-unknown-unknown && rustup toolchain install nightly-x86_64-unknown-linux-gnu && rustup component add rust-src --toolchain nightly-x86_64-unknown-linux-gnu
      - name: cargo
        run: cargo install --force cargo-make && cargo install wasm-pack && cargo install wasm-bindgen-cli && cargo install --locked cargo-leptos
      - name: npm
        uses: actions/setup-node@v4
        with:
          node-version: "23.5"
          check-latest: false
      - run: npm install -g @vscode/vsce
      - name: main
        run: cargo make
      - name: vscode extension
        run: cargo make vscode
      #    - name: ts
      #      run: cd source/ftml/viewer && cargo make wasm-pack-ts
      - name: doc
        run: cargo make doc
      - name: ffi
        run: cargo make build-ffi
      - name: Remove lock file
        run: rm target/doc/.lock
      - name: Set executable
        run: chmod +x bin/flams
      - name: Upload Docs
        uses: actions/upload-pages-artifact@v3
        with:
          path: target/doc
      - name: Upload ffi
        uses: actions/upload-artifact@v4
        with:
          name: ffi-linux
          path: target/release/libflams-ffi.so
      - name: Upload Binaries
        uses: actions/upload-artifact@v4
        with:
          name: linux
          path: bin
      #    - name: Upload Typescript
      #      uses: actions/upload-artifact@v4
      #      with:
      #        name: ts
      #        path: source/ftml/viewer/ts
      #- name: Upload VSCode Extension
      #  uses: actions/upload-artifact@v4
      #  with:
      #    name: vscode
      #    path: source/ts/vscode/flams.vsix
  windows:
    runs-on: windows-latest
    environment: production
    steps:
      - uses: actions/checkout@v4
      - name: rustups
        run: rustup update && rustup target add x86_64-pc-windows-msvc && rustup target add wasm32-unknown-unknown && rustup toolchain install nightly-x86_64-pc-windows-msvc && rustup component add rust-src --toolchain nightly-x86_64-pc-windows-msvc && rustup default nightly-x86_64-pc-windows-msvc
      - name: cargo
        run: cargo install --force cargo-make && cargo install wasm-pack && cargo install wasm-bindgen-cli && cargo install --locked cargo-leptos
      - name: main
        run: cargo make
      - name: ffi
        run: cargo make build-ffi
      - name: Upload ffi
        uses: actions/upload-artifact@v4
        with:
          name: ffi-windows
          path: target/x86_64-pc-windows-msvc/release/flams-ffi.dll
      - name: Upload Binaries
        uses: actions/upload-artifact@v4
        with:
          name: windows
          path: bin
  #  mac_x86:
  #    runs-on: macos-14-large
  #    environment: production
  #    steps:
  #      - uses: actions/checkout@v4
  #      - name: rustups
  #        run: rustup target add x86_64-apple-darwin && rustup target add wasm32-unknown-unknown && rustup toolchain install nightly-x86_64-apple-darwin && rustup component add rust-src --toolchain nightly-x86_64-apple-darwin && rustup default nightly-x86_64-apple-darwin #&& rustup component add rust-src --toolchain nightly-aarch64-apple-darwin
  #      - name: cargo
  #        run: cargo install cargo-leptos && cargo install --locked trunk
  #      - name: graphs
  #        run: cd web/graphs && CARGO_TARGET_DIR=../../target RUSTFLAGS="--cfg=web_sys_unstable_apis" trunk build --features=client --release
  #      - name: main
  #        run: FLAMS_BUILD_GRAPHS=true cargo leptos build --release
  #      - name: bundle
  #        run: mkdir out && cp target/release/flams out/flams && cp -r target/web out/web && cp main/resources/settings.toml out/settings.toml
  #      - uses: actions/upload-artifact@v4
  #        with:
  #          name: mac_x86
  #          path: out
  mac_aarch64:
    runs-on: macos-latest
    environment: production
    steps:
      - uses: actions/checkout@v4
      - name: rustups
        run: rustup update && rustup target add aarch64-apple-darwin && rustup target add wasm32-unknown-unknown && rustup toolchain install nightly-aarch64-apple-darwin && rustup component add rust-src --toolchain nightly-aarch64-apple-darwin && rustup default nightly-aarch64-apple-darwin
      - name: cargo
        run: cargo install --force cargo-make && cargo install wasm-pack && cargo install wasm-bindgen-cli && cargo install --locked cargo-leptos
      - name: main
        run: cargo make
      - name: ffi
        run: cargo make build-ffi
      - name: Set executable
        run: chmod +x bin/flams
      - name: Upload ffi
        uses: actions/upload-artifact@v4
        with:
          name: ffi-macos
          path: target/release/libflams-ffi.so
      - name: Upload Binaries
        uses: actions/upload-artifact@v4
        with:
          name: mac_aarch64
          path: bin
  release:
    needs: [linux, windows, mac_aarch64]
    runs-on: ubuntu-22.04
    environment: production
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: linux
          path: ./linux
      - name: Set executable
        run: chmod +x ./linux/flams
      - uses: actions/download-artifact@v4
        with:
          name: windows
          path: ./windows
      - uses: actions/download-artifact@v4
        with:
          name: mac_aarch64
          path: ./mac
      - name: Set executable
        run: chmod +x ./mac/flams
      - uses: actions/download-artifact@v4
        with:
          name: ffi-linux
          path: ./ffi-linux
      - uses: actions/download-artifact@v4
        with:
          name: ffi-windows
          path: ./ffi-windows
      - uses: actions/download-artifact@v4
        with:
          name: ffi-macos
          path: ./ffi-macos
      #  - uses: actions/download-artifact@v4
      #    with:
      #      name: ts
      #      path: ./ts
      #- uses: actions/download-artifact@v4
      #  with:
      #    name: vscode
      #    path: ./vscode
      - uses: vimtor/action-zip@v1
        with:
          files: linux/
          dest: linux.zip
      - uses: vimtor/action-zip@v1
        with:
          files: ffi-linux/
          dest: ffi-linux.zip
      - uses: vimtor/action-zip@v1
        with:
          files: ffi-windows/
          dest: ffi-windows.zip
      - uses: vimtor/action-zip@v1
        with:
          files: ffi-macos/
          dest: ffi-macos.zip
      - uses: vimtor/action-zip@v1
        with:
          files: windows/
          dest: windows.zip
      - uses: vimtor/action-zip@v1
        with:
          files: mac/
          dest: mac.zip
      #  - uses: vimtor/action-zip@v1
      #    with:
      #      files: ts/
      #      dest: ts.zip
      - uses: vimtor/action-zip@v1
        with:
          files: ./linux/web/ftml.js ./linux/web/ftml_bg.wasm
          dest: ftml.zip
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: main
          files: |
            ./linux.zip
            ./windows.zip
            ./mac.zip
            ./ftml.zip
            ./ffi-linux.zip
            ./ffi-windows.zip
            ./ffi-macos.zip
    #        ./vscode/flams.vsix
    #        ./ts.zip
  deploy-docs:
    needs: linux
    permissions:
      pages: write # to deploy to Pages
      id-token: write # to verify the deployment originates from an appropriate source
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-22.04
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
