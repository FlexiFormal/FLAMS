[workspace]
members = [
    "source/main",
    "source/utils",
    "source/ontology",
    "source/database",
    "source/system",
    "source/web-utils",
    "source/lsp",
    "source/stex",
    "source/ftml/system",
    "source/ftml/viewer-components",
    "source/ftml/extraction",
    "source/git",
    "source/router/base",
    "source/router/dashboard",
    "source/router/content",
    "source/router/backend",
    "source/router/logging",
    "source/router/buildqueue/base",
    "source/router/buildqueue/components",
    "source/router/git/base",
    "source/router/git/components",
    "source/router/login",
    "source/router/search",
    "source/router/vscode-bindings",
    "experiments",
    "source/ffi",
]
resolver = "2"
exclude = [
    "old",
    "ftml-viewer", #"web/graphs","test-plugin","tests","thaw",
    #"api", "controller", "core", "main", "ftml", "stex", "web/main", "web/orm"
]

[profile.release]
opt-level = 2
lto = "fat"
#codegen-units = 1
overflow-checks = false
panic = "unwind"
strip = true

[profile.dev]
split-debuginfo = "unpacked"
#opt-level=1
debug = 1
#codegen-backend="cranelift"

#[profile.dev.package."*"]
#opt-level=3

[profile.bench]
strip = "none"

# Defines a size-optimized profile for the WASM bundle in release mode
[profile.wasm-release]
inherits = "release"
panic = 'abort'
opt-level = 'z'
lto = true
#strip = "none"

[profile.wasm-dev]
inherits = "dev"
opt-level = 2
debug = true
split-debuginfo = "off"
debug-assertions = true
overflow-checks = true
lto = false
panic = 'unwind'
incremental = true
#codegen-units = 256
rpath = false

[workspace.metadata.wasm-pack.profile.dev.wasm-bindgen]
debug-js-glue = true
demangle-name-section = true
dwarf-debug-info = true

[workspace.metadata.docs.rs]
all-features = true
rustdoc-args = [
    "--cfg",
    "docsrs",
    "--html-in-header",
    "resources/katex-header.html",
    "--html-in-header",
    "resources/flams-docs.html",
    "--enable-index-page",
    "-Zunstable-options",
    "--generate-link-to-definition",
]

[workspace.lints.rust]
#unsafe_code = "deny"

[workspace.lints.clippy]
pedantic = "deny"
nursery = "deny"
unwrap_used = "deny"
module_name_repetitions = { level = "allow", priority = 1 }
enum_glob_use = { level = "allow", priority = 1 }

[workspace.dependencies]
# flams
flams-ftml = { path = "source/ftml/system", version = "0.0.1" }
flams-stex = { path = "source/stex", version = "0.0.1" }
flams-utils = { path = "source/utils", version = "0.0.1" }
flams-ontology = { path = "source/ontology", version = "0.0.1" }
flams-system = { path = "source/system", version = "0.0.1" }
flams-database = { path = "source/database", version = "0.0.1" }
flams-lsp = { path = "source/lsp", version = "0.0.1" }
flams-git = { path = "source/git", version = "0.0.1" }
flams-web-utils = { path = "source/web-utils", version = "0.0.1" }

flams-router-base = { path = "source/router/base", version = "0.0.1" }
flams-router-dashboard = { path = "source/router/dashboard", version = "0.0.1" }
flams-router-content = { path = "source/router/content", version = "0.0.1" }
flams-router-backend = { path = "source/router/backend", version = "0.0.1" }
flams-router-buildqueue-base = { path = "source/router/buildqueue/base", version = "0.0.1" }
flams-router-buildqueue-components = { path = "source/router/buildqueue/components", version = "0.0.1" }
flams-router-git-base = { path = "source/router/git/base", version = "0.0.1" }
flams-router-git-components = { path = "source/router/git/components", version = "0.0.1" }
flams-router-login = { path = "source/router/login", version = "0.0.1" }
flams-router-logging = { path = "source/router/logging", version = "0.0.1" }
flams-router-search = { path = "source/router/search", version = "0.0.1" }
flams-router-vscode = { path = "source/router/vscode-bindings", version = "0.0.1" }

ftml-extraction = { path = "source/ftml/extraction", version = "0.0.1" }
ftml-viewer-components = { path = "source/ftml/viewer-components", version = "0.0.1" }

rstest = { version = "0.25" }

# utils
const-str = "0.6"
triomphe = "0.1"
parking_lot = "0.12"
serde-wasm-bindgen = "0.6"
serde = { version = "1", features = ["derive", "rc"] }
serde_json = { version = "1", features = ["unbounded_depth"] }
rustc-hash = "2"
chrono = "0.4"
oxrdf = "0.2.3"
smallvec = { version = "2.0.0-alpha.11", features = ["specialization"] }
lazy_static = "1.5"
url = "2"
either = "1"
const_format = "0.2"
paste = "1"
urlencoding = "2.1"
send_wrapper = "0.6.0"
inventory = "0.3"
rayon = "1.10"
spliter = "0.1"
walkdir = "2.5"
filetime = "0.2"
regex = "1.10"
async-broadcast = "0.7"
simple-home-dir = "0.5"
async-trait = "0.1"
bincode = { version = "2", features = ["derive", "serde"] }
lightningcss = { version = "1.0.0-alpha.63" }
# cfg-if = "1"
tokio = { version = "1" }                                                   #, features = ["fs","io-util","sync","test-util","macros","rt"] }
tokio-util = { version = "0.7", features = ["compat"] }
tokio-stream = { version = "0.1" }
tempfile = { version = "3" }
phf = { version = "0.11", default-features = false, features = ["macros"] }
crossbeam-channel = { version = "0.5" }
flate2 = { version = "1.0" }
tar = { version = "0.4" }
async-compression = { version = "0.4", features = ["tokio", "gzip"] }
astral-tokio-tar = "0.5.1"
strum = { version = "0.27", features = ["derive"] }
git-url-parse = { version = "0.4.5" }

password-hash = { version = "0.5" }
argon2 = { version = "0.5" }

tracing = "0.1"
tracing-subscriber = { version = "0.3", features = [
    "smallvec",
    "parking_lot",
    "json",
] }
# tracing-appender = "0.2"
tracing-error = "0.2"

toml = "0.8"
eyre = "0.6"
color-eyre = "0.6"
thiserror = "2"
clap = { version = "4.5", features = ["derive"] }

oxigraph = { version = "0.4", default-features = false }
spargebra = "0.3"
sparesults = "0.2"
oxrdfio = { version = "0.1" }                            #, features = ["async-tokio"] }

sqlx = { version = "0.8", features = ["sqlite", "macros", "runtime-tokio"] }
libsqlite3-sys = { version = "*", features = ["bundled"] }
html5ever = "=0.29.1"                                                        # TODO updae once html2text updates markup5ever dependency

async-lsp = { version = "0.2", features = ["tokio", "async-io"] }
futures = { version = "0.3" }
oauth2 = { version = "5" }

reqwest = { version = "0", features = ["json"] }

image = { version = "0.25" }
webp = { version = "0.3" }
dashmap = { version = "6" }

gitlab = { version = "0" }
git2 = { version = "0.20", features = ["vendored-libgit2", "vendored-openssl"] }


# leptos
#leptos = { version = "0.7", features = ["nightly"] }
#leptos_axum = "0.7"
#leptos_meta = "0.7"
#leptos_router = { version = "0.7", features = ["nightly"] }
leptos = { version = "0.8", features = ["nightly"] }
leptos_axum = "0.8"
leptos_meta = "0.8"
leptos_router = { version = "0.8", features = ["nightly"] }
# leptos_use = {version="0.15", default-features = false}


#thaw = { version="0.4.2",features=["nightly"] }
#thaw_components = "0.3"
#thaw_utils = {features=["nightly"],version="0.1"}

#thaw = { path="../thaw/thaw", features=["nightly"] }
#thaw_components = { path="../thaw/thaw_components" }
#thaw_utils = { path="../thaw/thaw_utils", features=["nightly"] }

thaw = { version = "0.5.0-beta", features = ["nightly"] }
thaw_components = { version = "0.4.0-beta" }
thaw_utils = { version = "0.2.0-beta", features = ["nightly"] }

leptos-dyn-dom = { git = "https://github.com/Jazzpirate/leptos-dyn-dom", branch = "leptos8" }

bytes = "1.10"
icondata_bi = "0"
icondata_ai = "0"
icondata_ch = "0"
icondata_tb = "0"

axum = { version = "0.8", features = ["ws"] }
axum-macros = { version = "0.5" }
# leptos_axum requires 0.4:
tower = { version = "0.5", features = ["util"] }
tower-http = { version = "0.6", features = ["fs", "trace", "cors"] }
tower-sessions = { version = "0.14" }
axum-login = { version = "0.17" }
http = { version = "1" }
mime_guess = "2"

# wasm
tracing-wasm = "0.2"
wasm-bindgen = "=0.2.100"
wasm-bindgen-futures = "0.4"
console_error_panic_hook = "0.1.7"
reqwasm = "0.5"
gloo-storage = "0.3"
web-sys = { version = "0.3" }
tsify-next = { version = "0.5", features = ["js"] }
js-sys = "0.3"
js-regexp = "0.2"
wasm-streams = "0.4"
futures-util = "0.3"

# search

html2text = "0.14"
tantivy = "0.24"

# leptos-dyn-dom = { path="../leptos_dyn_dom"}
RusTeX = { git = "https://github.com/Jazzpirate/RusTeX", features = [
    "multithreaded",
] }
tex_engine = { git = "https://github.com/Jazzpirate/RusTeX", features = [
    "multithreaded",
] }
#RusTeX = {path= "../RusTeXNew/rustex",features = ["multithreaded"]}
#tex_engine = {path= "../RusTeXNew/tex_engine",features = ["multithreaded"]}

#[patch.crates-io]
#leptos = { git = "https://github.com/Jazzpirate/leptos", branch = "patch-1" }
#leptos_axum = { git = "https://github.com/Jazzpirate/leptos", branch = "patch-1" }
#leptos_meta = { git = "https://github.com/Jazzpirate/leptos", branch = "patch-1" }
#leptos_router = { git = "https://github.com/Jazzpirate/leptos", branch = "patch-1" }
#reactive_graph = { git = "https://github.com/Jazzpirate/leptos", branch = "patch-1" }

[[workspace.metadata.leptos]]
# project name
name = "flams"
bin-package = "flams"
lib-package = "flams"
bin-features = ["ssr"]
lib-features = ["hydrate"]
lib-default-features = false
lib-profile-release = "wasm-release"
lib-profile-dev = "wasm-dev"
bin-default-features = false
site-root = "target/web"
output-name = "flams"
assets-dir = "resources/assets"
site-pkg-dir = "pkg"
style-file = "resources/main.scss"
browserquery = "defaults"
lib-cargo-args = [
    "--target",
    "wasm32-unknown-unknown",
    "-Z",
    "build-std=std,panic_abort,core,alloc",
    "-Z",
    "build-std-features=optimize_for_size,panic_immediate_abort",
]

# dafuq:
# https://higherorderco.com/
# https://github.com/HigherOrderCO/kind
# https://cse.sc.edu/~pfu/document/papers/rta-tlca.pdf


## https://www.arroyo.dev/blog/rust-plugins


# utils:
# https://docs.rs/inventory/latest/inventory/ <- cross-project collecting of things
# https://crates.io/crates/lol_html <- HTML parsing/rewriting
# https://docs.rs/memchr/2.7.4/memchr/ <- fast string search
# https://docs.rs/icondata/latest/icondata/ <- icons
# https://crates.io/crates/flume channels?

# search:
# https://docs.rs/crate/tantivy/latest

#dbs:
# https://github.com/async-graphql/async-graphql?tab=readme-ov-file
# https://github.com/surrealdb/surrealdb/pull/3797
# https://github.com/graphql-rust/juniper
# https://docs.rs/tokio-rusqlite
# https://bonsaidb.io/

# interesting: https://github.com/rodrimati1992/abi_stable_crates

# https://nullderef.com/series/rust-plugins/
# https://github.com/marioortizmanero/pdk-experiments/tree/master/abi-stable-connectors

# https://fasterthanli.me/articles/so-you-want-to-live-reload-rust
# https://www.michaelfbryan.com/rust-ffi-guide/dynamic_loading.html
# https://zicklag.github.io/rust-tutorials/rust-plugins.html

# cglue?
# https://github.com/h33p/cglue/tree/main/examples

# https://crisal.io/words/2020/02/28/C++-rust-ffi-patterns-1-complex-data-structures.html


# prolly not:
# https://gitlab.com/zack-emmert/abi_trait
